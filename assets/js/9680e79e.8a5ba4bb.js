"use strict";(self.webpackChunkgf_site=self.webpackChunkgf_site||[]).push([["4540"],{64697:function(e,n,i){i.r(n),i.d(n,{metadata:()=>t,contentTitle:()=>u,default:()=>l,assets:()=>c,toc:()=>d,frontMatter:()=>r});var t=JSON.parse('{"id":"docs/\u4E91\u539F\u751F/\u4F7F\u7528Kubernetes Kind","title":"\u4F7F\u7528Kubernetes Kind\u642D\u5EFAAI\u7B97\u529B\u6D4B\u8BD5\u96C6\u7FA4","description":"\u672C\u6587\u8BE6\u7EC6\u4ECB\u7ECD\u4E86\u5982\u4F55\u4F7F\u7528Kind\u5DE5\u5177\u5FEB\u901F\u642D\u5EFAKubernetes\u672C\u5730\u6D4B\u8BD5\u96C6\u7FA4\uFF0C\u5305\u62ECKind\u7684\u5B89\u88C5\u914D\u7F6E\u3001\u57FA\u672C\u4F7F\u7528\u65B9\u6CD5\u4EE5\u53CA\u5E38\u89C1\u95EE\u9898\u89E3\u51B3\u65B9\u6848\uFF0C\u5E2E\u52A9\u5F00\u53D1\u8005\u5728\u672C\u5730\u9AD8\u6548\u8FDB\u884CKubernetes\u5E94\u7528\u5F00\u53D1\u548C\u6D4B\u8BD5\u3002","source":"@site/docs/docs/3000-\u4E91\u539F\u751F/4000-\u4F7F\u7528Kubernetes Kind.md","sourceDirName":"docs/3000-\u4E91\u539F\u751F","slug":"/cloud-native/kubernettes-kind-ai-test-cluster","permalink":"/cloud-native/kubernettes-kind-ai-test-cluster","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4000,"frontMatter":{"slug":"/cloud-native/kubernettes-kind-ai-test-cluster","title":"\u4F7F\u7528Kubernetes Kind\u642D\u5EFAAI\u7B97\u529B\u6D4B\u8BD5\u96C6\u7FA4","hide_title":true,"keywords":["Kubernetes","Kind","AI\u7B97\u529B","\u6D4B\u8BD5\u73AF\u5883","Docker","\u5BB9\u5668","k8s","minikube","\u4E91\u539F\u751F","\u5F00\u53D1\u73AF\u5883"],"description":"\u672C\u6587\u8BE6\u7EC6\u4ECB\u7ECD\u4E86\u5982\u4F55\u4F7F\u7528Kind\u5DE5\u5177\u5FEB\u901F\u642D\u5EFAKubernetes\u672C\u5730\u6D4B\u8BD5\u96C6\u7FA4\uFF0C\u5305\u62ECKind\u7684\u5B89\u88C5\u914D\u7F6E\u3001\u57FA\u672C\u4F7F\u7528\u65B9\u6CD5\u4EE5\u53CA\u5E38\u89C1\u95EE\u9898\u89E3\u51B3\u65B9\u6848\uFF0C\u5E2E\u52A9\u5F00\u53D1\u8005\u5728\u672C\u5730\u9AD8\u6548\u8FDB\u884CKubernetes\u5E94\u7528\u5F00\u53D1\u548C\u6D4B\u8BD5\u3002"},"sidebar":"mainSidebar","previous":{"title":"\u4F7F\u7528Kubernetes Kind\u642D\u5EFA\u672C\u5730\u6D4B\u8BD5\u96C6\u7FA4","permalink":"/cloud-native/kubernetes-kind"},"next":{"title":"AI\u6280\u672F","permalink":"/ai"}}'),o=i("85893"),a=i("50065");let r={slug:"/cloud-native/kubernettes-kind-ai-test-cluster",title:"\u4F7F\u7528Kubernetes Kind\u642D\u5EFAAI\u7B97\u529B\u6D4B\u8BD5\u96C6\u7FA4",hide_title:!0,keywords:["Kubernetes","Kind","AI\u7B97\u529B","\u6D4B\u8BD5\u73AF\u5883","Docker","\u5BB9\u5668","k8s","minikube","\u4E91\u539F\u751F","\u5F00\u53D1\u73AF\u5883"],description:"\u672C\u6587\u8BE6\u7EC6\u4ECB\u7ECD\u4E86\u5982\u4F55\u4F7F\u7528Kind\u5DE5\u5177\u5FEB\u901F\u642D\u5EFAKubernetes\u672C\u5730\u6D4B\u8BD5\u96C6\u7FA4\uFF0C\u5305\u62ECKind\u7684\u5B89\u88C5\u914D\u7F6E\u3001\u57FA\u672C\u4F7F\u7528\u65B9\u6CD5\u4EE5\u53CA\u5E38\u89C1\u95EE\u9898\u89E3\u51B3\u65B9\u6848\uFF0C\u5E2E\u52A9\u5F00\u53D1\u8005\u5728\u672C\u5730\u9AD8\u6548\u8FDB\u884CKubernetes\u5E94\u7528\u5F00\u53D1\u548C\u6D4B\u8BD5\u3002"},u=void 0,c={},d=[{value:"\u5B89\u88C5 Volcano",id:"\u5B89\u88C5-volcano",level:2},{value:"\u521B\u5EFA\u6D4B\u8BD5\u96C6\u7FA4",id:"\u521B\u5EFA\u6D4B\u8BD5\u96C6\u7FA4",level:2},{value:"\u521B\u5EFA Kind \u914D\u7F6E\u6587\u4EF6",id:"\u521B\u5EFA-kind-\u914D\u7F6E\u6587\u4EF6",level:3},{value:"\u6267\u884C\u96C6\u7FA4\u521B\u5EFA",id:"\u6267\u884C\u96C6\u7FA4\u521B\u5EFA",level:3},{value:"\u6A21\u62DFNFD&amp;GFD\u6807\u7B7E",id:"\u6A21\u62DFnfdgfd\u6807\u7B7E",level:2},{value:"\u6A21\u62DF\u6807\u7B7E\u811A\u672C",id:"\u6A21\u62DF\u6807\u7B7E\u811A\u672C",level:3},{value:"\u4E3A\u8282\u70B9\u6A21\u62DFGPU\u8D44\u6E90\u7C7B\u578B",id:"\u4E3A\u8282\u70B9\u6A21\u62DFgpu\u8D44\u6E90\u7C7B\u578B",level:2},{value:"\u521B\u5EFA\u6D4B\u8BD5\u961F\u5217",id:"\u521B\u5EFA\u6D4B\u8BD5\u961F\u5217",level:2},{value:"\u521B\u5EFA\u6D4B\u8BD5\u4EFB\u52A1",id:"\u521B\u5EFA\u6D4B\u8BD5\u4EFB\u52A1",level:2}];function s(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\u5B89\u88C5-volcano",children:"\u5B89\u88C5 Volcano"}),"\n",(0,o.jsxs)(n.p,{children:["\u53C2\u8003\u5B98\u65B9\u6587\u6863\uFF1A",(0,o.jsx)(n.a,{href:"https://volcano.sh/en/docs/v1-11-0/installation/",children:"https://volcano.sh/en/docs/v1-11-0/installation/"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# \u6DFB\u52A0Volcano Helm\u4ED3\u5E93\nhelm repo add volcano-sh https://volcano-sh.github.io/helm-charts\n\n# \u66F4\u65B0\u4ED3\u5E93\nhelm repo update\n\n# \u5B89\u88C5Volcano\nhelm install volcano volcano-sh/volcano -n volcano-system --create-namespace\n\n# \u67E5\u770B\u5B89\u88C5\u7ED3\u679C\nkubectl get all -n volcano-system\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u521B\u5EFA\u6D4B\u8BD5\u96C6\u7FA4",children:"\u521B\u5EFA\u6D4B\u8BD5\u96C6\u7FA4"}),"\n",(0,o.jsx)(n.h3,{id:"\u521B\u5EFA-kind-\u914D\u7F6E\u6587\u4EF6",children:"\u521B\u5EFA Kind \u914D\u7F6E\u6587\u4EF6"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="kind-config.yaml"',children:"kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nname: ai-cluster\nnodes:\n  # \u63A7\u5236\u5E73\u9762\u8282\u70B9\n  - role: control-plane\n  \n  # GPU\u5DE5\u4F5C\u8282\u70B91 - \u6A21\u62DFNVIDIA A100 GPU\u8282\u70B9\n  - role: worker\n    labels:\n      gpu-type: nvidia-a100\n  \n  # GPU\u5DE5\u4F5C\u8282\u70B92 - \u6A21\u62DFNVIDIA V100 GPU\u8282\u70B9\n  - role: worker\n    labels:\n      gpu-type: nvidia-v100\n  \n  # GPU\u5DE5\u4F5C\u8282\u70B93 - \u6A21\u62DFNVIDIA T4 GPU\u8282\u70B9\n  - role: worker\n    labels:\n      gpu-type: nvidia-t4\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\u6267\u884C\u96C6\u7FA4\u521B\u5EFA",children:"\u6267\u884C\u96C6\u7FA4\u521B\u5EFA"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kind create cluster --config kind-config.yaml\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u6A21\u62DFnfdgfd\u6807\u7B7E",children:"\u6A21\u62DFNFD&GFD\u6807\u7B7E"}),"\n",(0,o.jsxs)(n.p,{children:["\u5173\u4E8ENFD&GFD\u7684\u4ECB\u7ECD\u8BF7\u53C2\u8003\u6211\u53E6\u4E00\u7BC7\u6587\u7AE0\uFF1A",(0,o.jsx)(n.a,{href:"/ai/nfd-gfd",children:"NFD&GFD\u6280\u672F\u4ECB\u7ECD"})]}),"\n",(0,o.jsx)(n.h3,{id:"\u6A21\u62DF\u6807\u7B7E\u811A\u672C",children:"\u6A21\u62DF\u6807\u7B7E\u811A\u672C"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",metastring:'title="kind-label.sh"',children:'#!/bin/bash\n\n# \u8BBE\u7F6E\u989C\u8272\u8F93\u51FA\nGREEN=\'\\033[0;32m\'\nYELLOW=\'\\033[1;33m\'\nNC=\'\\033[0m\' # No Color\n\necho "${GREEN}\u5F00\u59CB\u4E3AKind\u96C6\u7FA4\u8282\u70B9\u6DFB\u52A0NFD\u548CGFD\u6807\u7B7E...${NC}"\n\n# \u786E\u4FDD\u811A\u672C\u6709\u6267\u884C\u6743\u9650\nchmod +x "$0"\n\n# \u68C0\u67E5kubectl\u662F\u5426\u53EF\u7528\nif ! command -v kubectl &> /dev/null; then\n    echo "\u9519\u8BEF: kubectl\u547D\u4EE4\u672A\u627E\u5230\uFF0C\u8BF7\u786E\u4FDD\u5DF2\u5B89\u88C5kubectl\u5E76\u914D\u7F6E\u6B63\u786E"\n    exit 1\nfi\n\n# \u68C0\u67E5\u96C6\u7FA4\u8FDE\u63A5\nif ! kubectl cluster-info &> /dev/null; then\n    echo "\u9519\u8BEF: \u65E0\u6CD5\u8FDE\u63A5\u5230Kubernetes\u96C6\u7FA4\uFF0C\u8BF7\u786E\u4FDD\u96C6\u7FA4\u5DF2\u542F\u52A8"\n    exit 1\nfi\n\n# \u7B49\u5F85\u6240\u6709\u8282\u70B9\u5C31\u7EEA\necho "\u7B49\u5F85\u6240\u6709\u8282\u70B9\u5C31\u7EEA..."\nkubectl wait --for=condition=Ready nodes --all --timeout=300s\n\n# \u83B7\u53D6\u5DE5\u4F5C\u8282\u70B9\u5217\u8868\nWORKER_NODES=($(kubectl get nodes --no-headers | grep -v control-plane | awk \'{print $1}\'))\n\nif [ ${#WORKER_NODES[@]} -ne 3 ]; then\n    echo "\u8B66\u544A: \u9884\u671F\u67093\u4E2A\u5DE5\u4F5C\u8282\u70B9\uFF0C\u4F46\u5B9E\u9645\u627E\u5230 ${#WORKER_NODES[@]} \u4E2A"\nfi\n\necho "${YELLOW}\u627E\u5230\u4EE5\u4E0B\u5DE5\u4F5C\u8282\u70B9:${NC}"\nfor node in "${WORKER_NODES[@]}"; do\n    echo " - $node"\ndone\n\n# \u4E3A\u6BCF\u4E2A\u8282\u70B9\u6DFB\u52A0\u6807\u7B7E\n# \u5982\u679C\u6CA1\u6709\u8DB3\u591F\u7684\u5DE5\u4F5C\u8282\u70B9\uFF0C\u5219\u9000\u51FA\nif [ ${#WORKER_NODES[@]} -lt 3 ]; then\n    echo "${YELLOW}\u9519\u8BEF: \u9700\u8981\u81F3\u5C113\u4E2A\u5DE5\u4F5C\u8282\u70B9\uFF0C\u4F46\u53EA\u627E\u5230 ${#WORKER_NODES[@]} \u4E2A${NC}"\n    exit 1\nfi\n\n# \u8282\u70B91: \u6A21\u62DFA100 GPU\u8282\u70B9\necho "${GREEN}\u4E3A\u8282\u70B9 ${WORKER_NODES[0]} \u6DFB\u52A0NFD\u548CGFD\u6807\u7B7E (A100 GPU)...${NC}"\n\n# NFD\u6807\u7B7E - CPU\u76F8\u5173\nkubectl label node ${WORKER_NODES[0]} \\\n    feature.node.kubernetes.io/cpu-model.vendor_id=GenuineIntel \\\n    feature.node.kubernetes.io/cpu-model.family=6 \\\n    feature.node.kubernetes.io/cpu-model.id=85 \\\n    feature.node.kubernetes.io/cpu-cpuid.AVX=true \\\n    feature.node.kubernetes.io/cpu-cpuid.AVX2=true \\\n    feature.node.kubernetes.io/cpu-cpuid.AVX512F=true \\\n    feature.node.kubernetes.io/cpu-cpuid.AMXBF16=true \\\n    feature.node.kubernetes.io/cpu-cpuid.AMXINT8=true \\\n    feature.node.kubernetes.io/cpu-hardware_multithreading=true \\\n    feature.node.kubernetes.io/cpu-pstate.status=active \\\n    feature.node.kubernetes.io/cpu-pstate.turbo=true \\\n    feature.node.kubernetes.io/cpu-pstate.scaling_governor=performance \\\n    feature.node.kubernetes.io/cpu-cstate.enabled=true \\\n    --overwrite\n\n# NFD\u6807\u7B7E - \u5185\u6838\u76F8\u5173\nkubectl label node ${WORKER_NODES[0]} \\\n    feature.node.kubernetes.io/kernel-version.full=5.15.0-76-generic \\\n    feature.node.kubernetes.io/kernel-version.major=5 \\\n    feature.node.kubernetes.io/kernel-version.minor=15 \\\n    feature.node.kubernetes.io/kernel-version.revision=0 \\\n    --overwrite\n\n# NFD\u6807\u7B7E - \u5185\u5B58\u76F8\u5173\nkubectl label node ${WORKER_NODES[0]} \\\n    feature.node.kubernetes.io/memory-numa=true \\\n    feature.node.kubernetes.io/memory-nv.present=true \\\n    --overwrite\n\n# NFD\u6807\u7B7E - PCI\u8BBE\u5907\u76F8\u5173 (NVIDIA GPU)\nkubectl label node ${WORKER_NODES[0]} \\\n    feature.node.kubernetes.io/pci-10de.present=true \\\n    feature.node.kubernetes.io/pci-10de.device-10de.model-name=NVIDIA_A100-SXM4-80GB \\\n    --overwrite\n\n# GFD\u6807\u7B7E - NVIDIA GPU\u76F8\u5173\nkubectl label node ${WORKER_NODES[0]} \\\n    nvidia.com/gpu.present=true \\\n    nvidia.com/gpu.count=8 \\\n    nvidia.com/gpu.product=A100-SXM4-80GB \\\n    nvidia.com/gpu.family=ampere \\\n    nvidia.com/gpu.compute.major=8 \\\n    nvidia.com/gpu.compute.minor=0 \\\n    nvidia.com/gpu.machine=NVIDIA_A100-SXM4-80GB \\\n    nvidia.com/gpu.memory=81920 \\\n    nvidia.com/gpu.clock=1410 \\\n    nvidia.com/gpu.driver.major=535 \\\n    nvidia.com/gpu.driver.minor=104 \\\n    nvidia.com/gpu.driver.rev=05 \\\n    nvidia.com/gpu.cuda.major=12 \\\n    nvidia.com/gpu.cuda.minor=2 \\\n    nvidia.com/gpu.cuda.patch=0 \\\n    nvidia.com/mig.capable=true \\\n    nvidia.com/mps.capable=true \\\n    nvidia.com/gpu.multiprocessors=108 \\\n    nvidia.com/gpu.slices.ci=1 \\\n    nvidia.com/gpu.slices.gi=1 \\\n    nvidia.com/gpu.slices.mem=1 \\\n    nvidia.com/gpu.max-instances=7 \\\n    nvidia.com/gpu.virtualization=false \\\n    --overwrite\n\n# \u8282\u70B92: \u6A21\u62DFV100 GPU\u8282\u70B9\necho "${GREEN}\u4E3A\u8282\u70B9 ${WORKER_NODES[1]} \u6DFB\u52A0NFD\u548CGFD\u6807\u7B7E (V100 GPU)...${NC}"\n\n# NFD\u6807\u7B7E - CPU\u76F8\u5173\nkubectl label node ${WORKER_NODES[1]} \\\n    feature.node.kubernetes.io/cpu-model.vendor_id=GenuineIntel \\\n    feature.node.kubernetes.io/cpu-model.family=6 \\\n    feature.node.kubernetes.io/cpu-model.id=85 \\\n    feature.node.kubernetes.io/cpu-cpuid.AVX=true \\\n    feature.node.kubernetes.io/cpu-cpuid.AVX2=true \\\n    feature.node.kubernetes.io/cpu-cpuid.AVX512F=true \\\n    feature.node.kubernetes.io/cpu-hardware_multithreading=true \\\n    feature.node.kubernetes.io/cpu-pstate.status=active \\\n    feature.node.kubernetes.io/cpu-pstate.turbo=true \\\n    feature.node.kubernetes.io/cpu-pstate.scaling_governor=performance \\\n    feature.node.kubernetes.io/cpu-cstate.enabled=true \\\n    --overwrite\n\n# NFD\u6807\u7B7E - \u5185\u6838\u76F8\u5173\nkubectl label node ${WORKER_NODES[1]} \\\n    feature.node.kubernetes.io/kernel-version.full=5.15.0-76-generic \\\n    feature.node.kubernetes.io/kernel-version.major=5 \\\n    feature.node.kubernetes.io/kernel-version.minor=15 \\\n    feature.node.kubernetes.io/kernel-version.revision=0 \\\n    --overwrite\n\n# NFD\u6807\u7B7E - \u5185\u5B58\u76F8\u5173\nkubectl label node ${WORKER_NODES[1]} \\\n    feature.node.kubernetes.io/memory-numa=true \\\n    --overwrite\n\n# NFD\u6807\u7B7E - PCI\u8BBE\u5907\u76F8\u5173 (NVIDIA GPU)\nkubectl label node ${WORKER_NODES[1]} \\\n    feature.node.kubernetes.io/pci-10de.present=true \\\n    feature.node.kubernetes.io/pci-10de.device-10de.model-name=NVIDIA_V100-SXM2-32GB \\\n    --overwrite\n\n# GFD\u6807\u7B7E - NVIDIA GPU\u76F8\u5173\nkubectl label node ${WORKER_NODES[1]} \\\n    nvidia.com/gpu.present=true \\\n    nvidia.com/gpu.count=4 \\\n    nvidia.com/gpu.product=V100-SXM2-32GB \\\n    nvidia.com/gpu.family=volta \\\n    nvidia.com/gpu.compute.major=7 \\\n    nvidia.com/gpu.compute.minor=0 \\\n    nvidia.com/gpu.machine=NVIDIA_V100-SXM2-32GB \\\n    nvidia.com/gpu.memory=32768 \\\n    nvidia.com/gpu.clock=1530 \\\n    nvidia.com/gpu.driver.major=535 \\\n    nvidia.com/gpu.driver.minor=104 \\\n    nvidia.com/gpu.driver.rev=05 \\\n    nvidia.com/gpu.cuda.major=12 \\\n    nvidia.com/gpu.cuda.minor=0 \\\n    nvidia.com/gpu.cuda.patch=0 \\\n    nvidia.com/mig.capable=false \\\n    nvidia.com/mps.capable=true \\\n    nvidia.com/gpu.multiprocessors=80 \\\n    nvidia.com/gpu.virtualization=false \\\n    --overwrite\n\n# \u8282\u70B93: \u6A21\u62DFT4 GPU\u8282\u70B9\necho "${GREEN}\u4E3A\u8282\u70B9 ${WORKER_NODES[2]} \u6DFB\u52A0NFD\u548CGFD\u6807\u7B7E (T4 GPU)...${NC}"\n\n# NFD\u6807\u7B7E - CPU\u76F8\u5173\nkubectl label node ${WORKER_NODES[2]} \\\n    feature.node.kubernetes.io/cpu-model.vendor_id=GenuineIntel \\\n    feature.node.kubernetes.io/cpu-model.family=6 \\\n    feature.node.kubernetes.io/cpu-model.id=85 \\\n    feature.node.kubernetes.io/cpu-cpuid.AVX=true \\\n    feature.node.kubernetes.io/cpu-cpuid.AVX2=true \\\n    feature.node.kubernetes.io/cpu-hardware_multithreading=true \\\n    feature.node.kubernetes.io/cpu-pstate.status=active \\\n    feature.node.kubernetes.io/cpu-pstate.turbo=true \\\n    feature.node.kubernetes.io/cpu-pstate.scaling_governor=performance \\\n    feature.node.kubernetes.io/cpu-cstate.enabled=true \\\n    --overwrite\n\n# NFD\u6807\u7B7E - \u5185\u6838\u76F8\u5173\nkubectl label node ${WORKER_NODES[2]} \\\n    feature.node.kubernetes.io/kernel-version.full=5.15.0-76-generic \\\n    feature.node.kubernetes.io/kernel-version.major=5 \\\n    feature.node.kubernetes.io/kernel-version.minor=15 \\\n    feature.node.kubernetes.io/kernel-version.revision=0 \\\n    --overwrite\n\n# NFD\u6807\u7B7E - \u5185\u5B58\u76F8\u5173\nkubectl label node ${WORKER_NODES[2]} \\\n    feature.node.kubernetes.io/memory-numa=false \\\n    --overwrite\n\n# NFD\u6807\u7B7E - PCI\u8BBE\u5907\u76F8\u5173 (NVIDIA GPU)\nkubectl label node ${WORKER_NODES[2]} \\\n    feature.node.kubernetes.io/pci-10de.present=true \\\n    feature.node.kubernetes.io/pci-10de.device-10de.model-name=NVIDIA_T4 \\\n    --overwrite\n\n# GFD\u6807\u7B7E - NVIDIA GPU\u76F8\u5173\nkubectl label node ${WORKER_NODES[2]} \\\n    nvidia.com/gpu.present=true \\\n    nvidia.com/gpu.count=2 \\\n    nvidia.com/gpu.product=T4 \\\n    nvidia.com/gpu.family=turing \\\n    nvidia.com/gpu.compute.major=7 \\\n    nvidia.com/gpu.compute.minor=5 \\\n    nvidia.com/gpu.machine=NVIDIA_T4 \\\n    nvidia.com/gpu.memory=16384 \\\n    nvidia.com/gpu.clock=1590 \\\n    nvidia.com/gpu.driver.major=535 \\\n    nvidia.com/gpu.driver.minor=104 \\\n    nvidia.com/gpu.driver.rev=05 \\\n    nvidia.com/gpu.cuda.major=11 \\\n    nvidia.com/gpu.cuda.minor=8 \\\n    nvidia.com/gpu.cuda.patch=0 \\\n    nvidia.com/mig.capable=false \\\n    nvidia.com/mps.capable=true \\\n    nvidia.com/gpu.multiprocessors=40 \\\n    nvidia.com/gpu.virtualization=false \\\n    --overwrite\n\necho "${GREEN}\u6240\u6709\u8282\u70B9\u6807\u7B7E\u6DFB\u52A0\u5B8C\u6210!${NC}"\necho "${YELLOW}\u9A8C\u8BC1\u8282\u70B9\u6807\u7B7E:${NC}"\n\n# \u9A8C\u8BC1\u6807\u7B7E\nfor node in "${WORKER_NODES[@]}"; do\n    echo "${GREEN}\u8282\u70B9 $node \u7684NFD\u6807\u7B7E:${NC}"\n    kubectl get node $node -o json | jq -r \'.metadata.labels | with_entries(select(.key | startswith("feature.node.kubernetes.io"))) | to_entries | .[] | "\\(.key)=\\(.value)"\'\n    \n    echo "${GREEN}\u8282\u70B9 $node \u7684GFD\u6807\u7B7E:${NC}"\n    kubectl get node $node -o json | jq -r \'.metadata.labels | with_entries(select(.key | startswith("nvidia.com"))) | to_entries | .[] | "\\(.key)=\\(.value)"\'\n    \n    echo ""\ndone\n\necho "${GREEN}\u811A\u672C\u6267\u884C\u5B8C\u6210!${NC}"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u4E3A\u8282\u70B9\u6A21\u62DFgpu\u8D44\u6E90\u7C7B\u578B",children:"\u4E3A\u8282\u70B9\u6A21\u62DFGPU\u8D44\u6E90\u7C7B\u578B"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",metastring:'title="add-gpu-resources.sh"',children:'#!/bin/bash\n\n# \u8BBE\u7F6E\u989C\u8272\u8F93\u51FA\nGREEN=\'\\033[0;32m\'\nYELLOW=\'\\033[1;33m\'\nNC=\'\\033[0m\' # No Color\n\necho "${GREEN}\u5F00\u59CB\u4E3AKind\u96C6\u7FA4\u8282\u70B9\u6DFB\u52A0\u6A21\u62DFGPU\u8D44\u6E90...${NC}"\n\n# \u83B7\u53D6\u5DE5\u4F5C\u8282\u70B9\u5217\u8868\nWORKER_NODES=($(kubectl get nodes --no-headers | grep -v control-plane | awk \'{print $1}\'))\n\nif [ ${#WORKER_NODES[@]} -lt 3 ]; then\n    echo "${YELLOW}\u8B66\u544A: \u9884\u671F\u67093\u4E2A\u5DE5\u4F5C\u8282\u70B9\uFF0C\u4F46\u5B9E\u9645\u627E\u5230 ${#WORKER_NODES[@]} \u4E2A${NC}"\nfi\n\necho "${YELLOW}\u627E\u5230\u4EE5\u4E0B\u5DE5\u4F5C\u8282\u70B9:${NC}"\nfor node in "${WORKER_NODES[@]}"; do\n    echo " - $node"\ndone\n\n# \u4F7F\u7528kubectl patch\u547D\u4EE4\u76F4\u63A5\u4FEE\u6539\u8282\u70B9\u8D44\u6E90\n\n# \u4E3A\u7B2C\u4E00\u4E2A\u8282\u70B9\u6DFB\u52A08\u4E2AA100 GPU\necho "${GREEN}\u4E3A\u8282\u70B9 ${WORKER_NODES[0]} \u6DFB\u52A08\u4E2A\u6A21\u62DFA100 GPU...${NC}"\n\n# \u4F7F\u7528kubectl patch\u547D\u4EE4\u4FEE\u6539\u8282\u70B9\u8D44\u6E90\nkubectl get node ${WORKER_NODES[0]} -o json | jq \'.status.capacity["nvidia.com/gpu"]="8" | .status.allocatable["nvidia.com/gpu"]="8"\' | kubectl replace --raw /api/v1/nodes/${WORKER_NODES[0]}/status -f -\n\n# \u4E3A\u7B2C\u4E8C\u4E2A\u8282\u70B9\u6DFB\u52A04\u4E2AV100 GPU\necho "${GREEN}\u4E3A\u8282\u70B9 ${WORKER_NODES[1]} \u6DFB\u52A04\u4E2A\u6A21\u62DFV100 GPU...${NC}"\nkubectl get node ${WORKER_NODES[1]} -o json | jq \'.status.capacity["nvidia.com/gpu"]="4" | .status.allocatable["nvidia.com/gpu"]="4"\' | kubectl replace --raw /api/v1/nodes/${WORKER_NODES[1]}/status -f -\n\n# \u4E3A\u7B2C\u4E09\u4E2A\u8282\u70B9\u6DFB\u52A02\u4E2AT4 GPU\necho "${GREEN}\u4E3A\u8282\u70B9 ${WORKER_NODES[2]} \u6DFB\u52A02\u4E2A\u6A21\u62DFT4 GPU...${NC}"\nkubectl get node ${WORKER_NODES[2]} -o json | jq \'.status.capacity["nvidia.com/gpu"]="2" | .status.allocatable["nvidia.com/gpu"]="2"\' | kubectl replace --raw /api/v1/nodes/${WORKER_NODES[2]}/status -f -\n\n# \u9A8C\u8BC1GPU\u8D44\u6E90\u662F\u5426\u6DFB\u52A0\u6210\u529F\necho "${GREEN}\u9A8C\u8BC1\u8282\u70B9GPU\u8D44\u6E90:${NC}"\nkubectl get nodes -o=custom-columns=NAME:.metadata.name,GPU:.status.capacity.\\\'nvidia\\.com/gpu\\\'\n\necho "${GREEN}\u6A21\u62DFGPU\u8D44\u6E90\u6DFB\u52A0\u5B8C\u6210!${NC}"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u521B\u5EFA\u6D4B\u8BD5\u961F\u5217",children:"\u521B\u5EFA\u6D4B\u8BD5\u961F\u5217"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="test-queue.yaml"',children:"apiVersion: scheduling.volcano.sh/v1beta1\nkind: Queue\nmetadata:\n  name: default\nspec:\n  weight: 1\n  reclaimable: false\n---\napiVersion: scheduling.volcano.sh/v1beta1\nkind: Queue\nmetadata:\n  name: high-priority\nspec:\n  weight: 10\n  capability:\n    cpu: 100\n    memory: 100Gi\n    nvidia.com/gpu: 8\n  reclaimable: true\n---\napiVersion: scheduling.volcano.sh/v1beta1\nkind: Queue\nmetadata:\n  name: ai-training\nspec:\n  weight: 5\n  capability:\n    cpu: 50\n    memory: 50Gi\n    nvidia.com/gpu: 4\n  reclaimable: true\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u521B\u5EFA\u6D4B\u8BD5\u4EFB\u52A1",children:"\u521B\u5EFA\u6D4B\u8BD5\u4EFB\u52A1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="test-job.yaml"',children:'apiVersion: batch.volcano.sh/v1alpha1\nkind: Job\nmetadata:\n  name: gpu-test-job\nspec:\n  minAvailable: 1\n  schedulerName: volcano\n  queue: high-priority\n  policies:\n    - event: PodEvicted\n      action: RestartJob\n  maxRetry: 1\n  tasks:\n    - replicas: 1\n      name: gpu-test\n      template:\n        spec:\n          containers:\n            - name: gpu-test-container\n              image: alpine:latest\n              command:\n                - sh\n                - -c\n                - "nvidia-smi || echo \'No GPU found, but scheduled to GPU node\' && sleep 300"\n              resources:\n                limits:\n                  cpu: 1\n                  memory: 1Gi\n                  nvidia.com/gpu: 1\n                requests:\n                  cpu: 500m\n                  memory: 512Mi\n                  nvidia.com/gpu: 1\n          restartPolicy: Never\n          nodeSelector:\n            feature.node.kubernetes.io/pci-10de.present: "true"  # \u9009\u62E9\u6709NVIDIA GPU\u7684\u8282\u70B9\n\n'})})]})}function l(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return u},a:function(){return r}});var t=i(67294);let o={},a=t.createContext(o);function r(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);